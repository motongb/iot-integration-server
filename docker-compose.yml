version: '1.0'

services:
  eureka:
    build:
      context: ./server-eureka/
      dockerfile: ./Dockerfile
    image:  iot-server/server-eureka:1.0
    restart: always
    container_name: server-eureka
    hostname: server-eureka
    ports:
    - "8000:8000"
    networks:
      iotnet:
        aliases:
        - server-eureka

  gateway:
    build:
      context: ./server-gateway/
      dockerfile: ./Dockerfile
    image:  iot-server/server-gateway:1.0
    restart: always
    container_name: server-gateway
    hostname: server-gateway
    ports:
    - "8080:8080"
    networks:
      iotnet:
        aliases:
        - server-gateway

  book:
    build:
      context: ./server-book/
      dockerfile: ./Dockerfile
    image:  iot-server/server-book:1.0
    restart: always
    container_name: server-book
    hostname: server-book
    ports:
    - "8010:8010"
    networks:
      iotnet:
        aliases:
        - server-book

  base:
    build:
      context: ./server-base/
      dockerfile: ./Dockerfile
    image:  iot-server/server-base:1.0
    restart: always
    container_name: server-base
    hostname: server-base
    ports:
    - "8020:8020"
    networks:
      iotnet:
        aliases:
        - server-base

  admin:
    build:
      context: ./server-admin/
      dockerfile: ./Dockerfile
    image:  iot-server/server-admin:1.0
    restart: always
    container_name: server-admin
    hostname: server-admin
    ports:
    - "8020:8030"
    networks:
      iotnet:
        aliases:
        - server-admin

networks:
  iotnet:
    driver: 'bridge'